imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@UserBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
         handler_id: session.handler.native_file
         save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    templating:
        engines: ['twig']

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes:
            - 'bootstrap_3_layout.html.twig'
#            - 'form/fields.html.twig'
            - AdminBundle:Form:fields.html.twig
    globals:
        background_top: 'header_default.jpg'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite:
            apply_to: '\.(css|scss)$'
        scssphp:
            formatter:  Leafo\ScssPhp\Formatter\Compressed
            apply_to: '\.scss$'
        uglifycss:
            node:     /usr/bin/node
            bin:      /usr/bin/uglifycss
            apply_to: '\.(css|scss)$'
        uglifyjs2:
            node:     /usr/bin/node
            bin:      /usr/bin/uglifyjs
            apply_to: '\.js$'
        jpegtran:
             optimize: true
             copy:     "none"
    bundles:
        - AdminBundle

vich_uploader:
    db_driver: orm
    storage:   gaufrette
    mappings:
            place_image:
                uri_prefix:         https://ai-static.s3.amazonaws.com/dev/poc
                upload_destination: product_image_fs
                namer:              vich_uploader.namer_uniqid
                directory_namer:
                    service: admin.vich_uploader.dicrectory_namer
                    options: {subdir: 'place'}
                delete_on_remove: true
                delete_on_update: true

            event_poster:
                uri_prefix:         https://ai-static.s3.amazonaws.com/dev/poc
                upload_destination: product_image_fs
                namer:              vich_uploader.namer_uniqid
                directory_namer:
                    service: admin.vich_uploader.dicrectory_namer
                    options: {subdir: 'event'}
                delete_on_remove: true
                delete_on_update: true

            event_picture:
                uri_prefix:         https://ai-static.s3.amazonaws.com/dev/poc
                upload_destination: product_image_fs
                namer:              vich_uploader.namer_uniqid
                directory_namer:
                    service: admin.vich_uploader.dicrectory_namer
                    options: {subdir: 'event'}
                delete_on_remove: true
                delete_on_update: true

admin:
    aws3:
        configuration:
            version:             latest
            region:              eu-west-1
            signature_version:   v4
            credentials:
                key:             '%amazon_key%'
                secret:          '%amazon_secret%'
            http:
                connect_timeout: 3
                timeout:         8
        bucket:                  '%amazon_bucket%'
        base_path:               dev/poc


knp_gaufrette:
    stream_wrapper: ~

    adapters:
        amazon.adapter:
            aws_s3:
                service_id:     admin.aws_s3.client
                bucket_name:    '%amazon_bucket%'
                options:
                    directory:  dev/poc
                    acl:        'public-read'

    filesystems:
        product_image_fs:
            adapter:            amazon.adapter

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: UserBundle\Entity\Admin
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"
    service:
        mailer: 'fos_user.mailer.noop'